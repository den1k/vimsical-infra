---
# Provision security groups
#

# Create
#

- name: create alb security group
  ec2_group:
    description: ALB security group
    name: "{{ alb_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules:
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  tags: provision

- name: create api security group
  ec2_group:
    description: API security group
    name: "{{ api_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules:
      # HTTP
      - proto: tcp
        from_port: 8080
        to_port: 8080
        group_name: "{{ alb_sg }}"
      # Websocket
      - proto: tcp
        from_port: 8081
        to_port: 8081
        group_name: "{{ alb_sg }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  tags: provision

- name: create cassandra security group
  ec2_group:
    description: Cassandra cluster node security group
    name: "{{ cassandra_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules:
      # Inter-node
      - proto: tcp
        from_port: 7000
        to_port: 7000
        group_name: "{{ cassandra_sg }}"
      # Inter-node SSL
      - proto: tcp
        from_port: 7001
        to_port: 7001
        group_name: "{{ cassandra_sg }}"
      # CQL inter-node
      - proto: tcp
        from_port: 9042
        to_port: 9042
        group_name: "{{ cassandra_sg }}"
      # CQL clients
      - proto: tcp
        from_port: 9042
        to_port: 9042
        group_name: "{{ api_sg }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  tags: provision

- name: create peer security group
  ec2_group:
    description: Datomic peer security group
    name: "{{ peer_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  tags: provision

- name: create transactor security group
  ec2_group:
    description: Datomic transactor security group
    name: "{{ transactor_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules:
      - proto: tcp
        from_port: 4334
        to_port: 4334
        group_name: "{{ peer_sg }}"
      - proto: tcp
        from_port: 4335
        to_port: 4335
        group_name: "{{ peer_sg }}"
      - proto: tcp
        from_port: 4336
        to_port: 4336
        group_name: "{{ peer_sg }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  tags: provision

- name: create redis security group
  ec2_group:
    description: Redis security group
    name: "{{ redis_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules:
      - proto: tcp
        from_port: 6379
        to_port: 6379
        group_name: "{{ api_sg }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  tags: provision

- name: create ssh security group
  ec2_group:
    description: SSH security group
    name: "{{ ssh_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  tags: provision

# Purge
# NOTE the rules need to be purge first in order to avoid depency errors

- name: purge alb security group
  ec2_group:
    description: ALB security group
    name: "{{ alb_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules: []
    rules_egress: []
  tags: destroy

- name: purge api security group
  ec2_group:
    description: API security group
    name: "{{ api_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules: []
    rules_egress: []
  tags: destroy

- name: purge cassandra security group
  ec2_group:
    description: Cassandra cluster node security group
    name: "{{ cassandra_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules: []
    rules_egress: []
  tags: destroy

- name: purge peer security group
  ec2_group:
    description: Datomic peer security group
    name: "{{ peer_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules: []
    rules_egress: []
  tags: destroy

- name: purge transactor security group
  ec2_group:
    description: Datomic transactor security group
    name: "{{ transactor_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules: []
    rules_egress: []
  tags: destroy

- name: purge redis security group
  ec2_group:
    description: Redis security group
    name: "{{ redis_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules: []
    rules_egress: []
  tags: destroy

- name: purge ssh security group
  ec2_group:
    description: SSH security group
    name: "{{ ssh_sg }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules: []
    rules_egress: []
  tags: destroy

# Destroy
#

- name: destroy alb security group
  ec2_group:
    description: ALB security group
    name: "{{ alb_sg }}"
    region: "{{ aws_region }}"
    state: absent
  tags: destroy

- name: destroy api security group
  ec2_group:
    state: absent
    description: API security group
    name: "{{ api_sg }}"
    region: "{{ aws_region }}"
  tags: destroy

- name: destroy cassandra security group
  ec2_group:
    state: absent
    description: Cassandra cluster node security group
    name: "{{ cassandra_sg }}"
    region: "{{ aws_region }}"
  tags: destroy

- name: destroy peer security group
  ec2_group:
    state: absent
    description: Datomic peer security group
    name: "{{ peer_sg }}"
    region: "{{ aws_region }}"
  tags: destroy

- name: destroy transactor security group
  ec2_group:
    state: absent
    description: Datomic transactor security group
    name: "{{ transactor_sg }}"
    region: "{{ aws_region }}"
  tags: destroy

- name: destroy redis security group
  ec2_group:
    state: absent
    description: Redis security group
    name: "{{ redis_sg }}"
    region: "{{ aws_region }}"
  tags: destroy

- name: destroy ssh security group
  ec2_group:
    state: absent
    description: SSH security group
    name: "{{ ssh_sg }}"
    region: "{{ aws_region }}"
  tags: destroy
