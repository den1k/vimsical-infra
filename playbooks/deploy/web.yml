---
# Frontend deployment playbook
#

# WARN: This will build and deploy the current source tree, it is this NOT
# REPRODUCIBLE and should be changed ASAP to use a predetermined branch and om
# version


# NOTE: Get the facts from the ALB so that the compiled cljs code can reference
# the load balancer as the host for its remotes

- hosts: localhost
  tags:
    - deploy
    - web

  tasks:
    - include: ../alb/alb_facts.yml

    - name: clean
      command: >-
        lein clean
      args:
        chdir: "{{ web_git_repo_dir }}"

    - name: compile garden
      command: >-
        lein garden once
      args:
        chdir: "{{ web_git_repo_dir }}"

    - name: compile cljs
      command: >-
        lein with-profile prod cljsbuild once prod
      args:
        chdir: "{{ web_git_repo_dir }}"
      environment:
        S3_AUDIO_ZONE: "{{ s3_audio_zone }}"
        S3_AUDIO_BUCKET: "{{ s3_audio_bucket_name }}"
        # S3_SIGN_PROTOCOL: "http"
        S3_SIGN_HOST: "{{ alb_dns }}"
        S3_SIGN_PATH: "{{ s3_sign_path }}"
        WEBSOCKET_HOST: "{{ alb_dns }}"
        WEBSOCKET_PATH: "{{ api_websocket_path }}"
        REMOTE_HOST: "{{ alb_dns }}"
        REMOTE_PATH: "{{ api_remote_path }}"
        CSRF: "{{ api_csrf }}"

    - name: upload artifacts to s3
      command: >-
        aws s3 cp
        ./resources/public/
        s3://"{{ s3_web_bucket_name }}"/
        --recursive --include *.*
      args:
        chdir: "{{ web_git_repo_dir }}"

    # - name: Invalidate cloudfront distribution
    #   command: >-
    #     aws cloundfront create-invalidation
    #     --distribution-id "{{ s3_web_bucket_cf_distribution_id }}"
    #     --paths /*
