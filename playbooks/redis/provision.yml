---
# Redis on elasticache
#

# NOTE elasticache has specific restrictions on cluster names that prevent us
# from using the group_name. Should we switch to using hyphens?

- hosts: localhost
  connection: local
  gather_facts: false
  tags: provision
  vars:
    cluster_name: "{{ env_name }}-redis"
    cluster_node_type: cache.m1.small
    cluster_num_nodes: 1
    cluster_az: "{{ aws_region }}a" # TODO duplicated from VPC provisioning
    cluster_subnet_name: "{{ cluster_az }}-subnet-group"
  tasks:
    - name: create cluster subnet group
      elasticache_subnet_group:
        state: present
        name: "{{ cluster_subnet_name }}"
        description: "Default redis subnet group"
        region: "{{ aws_region }}"
        subnets:
          - "{{ vpc.subnets[0].id }}"

    - name: create cluster
      elasticache:
        state: present
        engine: redis
        name: "{{ cluster_name }}"
        region: "{{ aws_region }}"
        node_type: "{{ cluster_node_type }}"
        num_nodes: "{{ cluster_num_nodes }}"
        cache_port: "{{ redis_port }}"
        cache_security_groups: [] # Must be empty with vpc
        cache_subnet_group: "{{ cluster_subnet_name }}"
        security_group_ids: "{{ redis_sg.group_id }}"
        zone: "{{ cluster_az }}"
        wait: true
      register: redis

    - name: set redis host fact
      set_fact:
        redis_host: "{{ redis.elasticache.data.CacheNodes[0].Endpoint.Address }}"

- hosts: localhost
  connection: local
  gather_facts: false
  tags: destroy
  vars:
    cluster_name: "{{ env_name }}-redis"
    cluster_az: "{{ aws_region }}a" # TODO duplicated from VPC provisioning
    cluster_subnet_name: "{{ cluster_az }}-subnet-group"
  tasks:
    - name: destroy cluster
      elasticache:
        state: absent
        name: "{{ cluster_name }}"
        region: "{{ aws_region }}"
        zone: "{{ cluster_az }}"
        wait: true

    - name: destroy cluster subnet group
      elasticache_subnet_group:
        state: absent
        name: "{{ cluster_subnet_name }}"
        region: "{{ aws_region }}"
